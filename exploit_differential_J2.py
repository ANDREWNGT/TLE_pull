import math
import matplotlib.pyplot as plt
import matplotlib
from compute_RAAN_drift import calc_J2_rate
import pandas as pd
global mu 
UNIGCONST = 6.67430e-11
EARTHMASS = 5.97237e24      # in kg
EARTHRADEQT = 6378.137      # in km
mu= UNIGCONST * EARTHMASS # GM 
# Script to calculate delta v to effect RAAN change by exploiting differential J2 rates at different altitudes.
def hohmann_transfer(R1, R2):
    R1=R1*1000
    R2=R2*1000
    DV1 = math.sqrt(mu/R1) * (math.sqrt((2*R2)/(R1+R2)) - 1)
    DV2 = math.sqrt(mu/R2) * (1 - math.sqrt((2*R1)/(R1+R2)))
    totalDV = DV1+DV2
    Time_Elapsed = math.pi * math.sqrt(((R1+R2)**3)/(8*mu))
    return totalDV

if __name__=="__main__":
    matplotlib.use('Qt4Agg')
    Re = 6378
    nominal_alt = 585
    df =pd.DataFrame(columns=["alt_offset", "days_for_RAAN_change", "del_V"])
    #alt_offsets=[]
    #times_to_complete_raan=[]
    #del_v_for_hohmann_transfer=[]
    #time_for_transfer=[]
    for alt_offset in range(1, 50, 5):
        #alt_offset = 20 #km below
        list_a=[nominal_alt + Re, nominal_alt + Re - alt_offset]
        i=10
        e=0.01
        J2_rates=[]
        RAAN_displacement=2
        for a in list_a:
            #Time to complete RAAN maneuver via different altitudes
            J2_rates.append(calc_J2_rate(a, i, e))

        J2_diff = J2_rates[1]-J2_rates[0]
        time_to_complete_raan = RAAN_displacement/J2_diff/(24*60*60) #days
        #print(f"{alt_offset}, {time_to_complete_raan} days")
        new_row ={"alt_offset" :alt_offset, "days_for_RAAN_change" :time_to_complete_raan, "del_V": hohmann_transfer(list_a[0], list_a[1])*2}
        df = df.append(new_row, ignore_index=True)
    df.to_csv("RAAN_simulation.csv")
        
    ''' times_to_complete_raan.append(time_to_complete_raan)

    del_v_for_hohmann_transfer.append(hohmann_transfer(list_a[0], list_a[1])[0]*2)
    time_for_transfer.append(hohmann_transfer(list_a[0], list_a[1])[1])
    print(del_v_for_hohmann_transfer)
    print(time_for_transfer) 
    '''
    plt.plot(df["alt_offset"], df["days_for_RAAN_change"])
    plt.show()